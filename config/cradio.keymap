/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

        new_combo {
            bindings = <&kp BACKSPACE>;
            key-positions = <8 9>;
        };

        combo_enter {
            bindings = <&kp ENTER>;
            key-positions = <18 19>;
        };

        combo_return0 {
            bindings = <&tog 0>;
            key-positions = <31 32 30 33>;
        };

        combo_leftshift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <20 21>;
        };

        combo_rightshift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <28 29>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp Q   &kp W   &kp E   &kp R        &kp T        &kp Y   &kp U      &kp I    &kp O             &kp P
  &kp A   &kp S   &kp D   &kp F        &kp G        &kp H   &kp J      &kp K    &kp L  &kp SINGLE_QUOTE
  &kp Z   &kp X   &kp C   &kp V        &kp B        &kp N   &kp M  &kp COMMA  &kp DOT      &kp KP_SLASH
                          &mo 1  &lt 2 SPACE  &lt 3 SPACE   &mo 2
            >;
        };

        EXTEND_LAYER {
            bindings = <
     &none         &none     &kp K_VOL_DN    &kp K_VOL_UP       &none        &kp HOME     &kp PAGE_UP  &kp PAGE_DOWN          &kp END      &kp NUM_0
 &kp LCTRL  &kp LEFT_ALT     &kp LEFT_GUI  &kp LEFT_SHIFT       &none  &kp LEFT_ARROW  &kp DOWN_ARROW   &kp UP_ARROW  &kp RIGHT_ARROW  &kp BACKSPACE
   &kp ESC     &kp TILDE  &kp NON_US_BSLH         &kp TAB  &kp TILDE2       &kp MINUS       &kp GRAVE       &kp LBKT         &kp RBKT     &kp DELETE
                                                    &mo 1    &kp LGUI        &kp RGUI           &mo 2
            >;
        };

        SYMBOL_LAYER {
            bindings = <
 &kp EXCLAMATION       &kp AT_SIGN         &kp HASH               &kp DLLR        &kp PERCENT    &kp CARET      &kp AMPS  &kp KP_MULTIPLY  &kp UNDERSCORE  &kp SEMICOLON
        &kp BSLH         &kp TILDE   &kp LEFT_BRACE   &kp LEFT_PARENTHESIS   &kp LEFT_BRACKET    &kp COLON  &kp KP_EQUAL         &kp LBRC        &kp RBRC       &kp BKSP
   &kp LESS_THAN  &kp GREATER_THAN  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET     &kp PIPE     &kp MINUS        &kp EQUAL        &kp PLUS  &kp BACKSLASH
                                                                     &mo 3        &lt 3 SPACE  &lt 4 SPACE         &mo 2
            >;
        };

        NUMBER_LAYER {
            bindings = <
  &none   &none   &none   &none        &none            &none  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9   &none
 &kp F1  &kp F2  &kp F3  &kp F4       &kp F5            &none  &kp NUMBER_6  &kp NUMBER_5  &kp NUMBER_4   &none
  &none   &none   &none   &none        &none  &kp KP_NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3   &none
                          &mo 4  &lt 0 SPACE      &lt 0 SPACE         &mo 4
            >;
        };

        BT_LAYER {
            bindings = <
 &bt BT_NXT  &bt BT_PRV   &none   &none      &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &none   &none
      &none       &none   &none   &none      &none         &none         &none         &none   &none   &none
      &none       &none   &none   &none      &none         &none         &none         &none   &none   &none
                                 &tog 0  &kp SPACE     &kp SPACE        &tog 1
            >;
        };
    };
};
